{
    "Question": "Extract all bold texts. Print those raw texts separated by \\n.",
    "Answer": "halo\ngroot",
    "Label": {
        "typename": "markdown",
        "node_number": 1,
        "n_ary_ratio": 1,
        "para_len_ratio": 6,
        "few_shot_num": 4,
        "with_rule_hint": true,
        "other_label_list": [
            "TextRetrieval"
        ]
    },
    "Reference": "y\nmonkey q**groot**ualify ravish salvage halo X-ray\n# z\nnob qualify**halo** ravish salvage halo X-ray",
    "timestamp": "08_28_2024_23_21_26.893991",
    "input_hash": 5186140670010360169,
    "examples": [
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "idiot\nhalo",
            "Reference": "q\nessence transformer ravish transformer**halo**![alt](nf.jpeg \"hover text\")ence transformer ravish transformer oops essence\n# r\nfar transformer ravish transformer oops esse**idiot**nce"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "salvage\nravish",
            "Reference": "h\nbanana n**ravish**ob kangaroo nob jargon zen\n# i\ncafe nob kangaroo nob jarg**salvage**![alt](ai.png \"hover text\")e nob kangaroo nob jargon zen"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "ravish",
            "Reference": "c\nmonkey zen groot**ravish**![alt](bg.jpeg \"hover text\")ot salvage wake jargon\n# d\nnob zen groot salvage wake jargon"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "oops",
            "Reference": "f\nyogurt yogurt wake oops salv**oops**age far\n# g\nzen yogurt wake oops salvage far"
        }
    ],
    "RuleHint": "To find the bold texts, search for double stars, i.e., **, the content between two occurrences of double stars is the bold texts. Note that the bold range should start from the double stars occurring at i-th spot throughout the whole input file, where i is odd, and end with double stars occurring at jth spot where j is even. For example, text between double stars appearing first and second time."
}