{
    "Question": "What is the depth of node o? Answer an integer, root is of depth 0.",
    "Answer": "0",
    "Label": {
        "typename": "tree",
        "node_number": 2,
        "n_ary_ratio": 1,
        "para_len_ratio": 6,
        "few_shot_num": 5,
        "with_rule_hint": true,
        "other_label_list": [
            "Tree.Depth"
        ]
    },
    "Reference": "o->p\np->q\np->r\no->s\ns->t\ns->u",
    "timestamp": "08_28_2024_23_21_26.911790",
    "input_hash": 4758700606093425122,
    "examples": [
        {
            "Question": "What is the depth of node t? Answer an integer, root is of depth 0. ",
            "Answer": "2",
            "Reference": "n->o\no->p\no->q\nn->r\nr->s\nr->t"
        },
        {
            "Question": "What is the depth of node r? Answer an integer, root is of depth 0. ",
            "Answer": "1",
            "Reference": "q->r\nr->s\nr->t\nq->u\nu->v\nu->w"
        },
        {
            "Question": "What is the depth of node x? Answer an integer, root is of depth 0. ",
            "Answer": "2",
            "Reference": "r->s\ns->t\ns->u\nr->v\nv->w\nv->x"
        },
        {
            "Question": "What is the depth of node v? Answer an integer, root is of depth 0. ",
            "Answer": "1",
            "Reference": "u->v\nv->w\nv->x\nu->y\ny->z\ny->ab"
        },
        {
            "Question": "What is the depth of node l? Answer an integer, root is of depth 0. ",
            "Answer": "2",
            "Reference": "g->h\nh->i\nh->j\ng->k\nk->l\nk->m"
        }
    ],
    "RuleHint": "To find the depth of a node, you need to find the number of edges from root to node. You have to start from the root with depth 0 and assign the depth for each node recursively. For any given node, it gets depth of current depth. Increment the depth by 1 before go to its subtree and repeat the process until every node gets a depth."
}