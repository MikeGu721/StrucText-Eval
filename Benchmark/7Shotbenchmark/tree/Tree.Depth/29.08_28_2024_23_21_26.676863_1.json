{
    "Question": "What is the depth of node ab? Answer an integer, root is of depth 0.",
    "Answer": "2",
    "Label": {
        "typename": "tree",
        "node_number": 2,
        "n_ary_ratio": 1,
        "para_len_ratio": 6,
        "few_shot_num": 7,
        "with_rule_hint": true,
        "other_label_list": [
            "Tree.Depth"
        ]
    },
    "Reference": "x->y\ny->z\ny->ab\nx->bb\nbb->cb\nbb->db",
    "timestamp": "08_28_2024_23_21_26.676863",
    "input_hash": -490315405556450822,
    "examples": [
        {
            "Question": "What is the depth of node s? Answer an integer, root is of depth 0. ",
            "Answer": "2",
            "Reference": "p->q\nq->r\nq->s\np->t\nt->u\nt->v"
        },
        {
            "Question": "What is the depth of node s? Answer an integer, root is of depth 0. ",
            "Answer": "1",
            "Reference": "o->p\np->q\np->r\no->s\ns->t\ns->u"
        },
        {
            "Question": "What is the depth of node l? Answer an integer, root is of depth 0. ",
            "Answer": "2",
            "Reference": "g->h\nh->i\nh->j\ng->k\nk->l\nk->m"
        },
        {
            "Question": "What is the depth of node c? Answer an integer, root is of depth 0. ",
            "Answer": "0",
            "Reference": "c->d\nd->e\nd->f\nc->g\ng->h\ng->i"
        },
        {
            "Question": "What is the depth of node t? Answer an integer, root is of depth 0. ",
            "Answer": "2",
            "Reference": "o->p\np->q\np->r\no->s\ns->t\ns->u"
        },
        {
            "Question": "What is the depth of node w? Answer an integer, root is of depth 0. ",
            "Answer": "1",
            "Reference": "s->t\nt->u\nt->v\ns->w\nw->x\nw->y"
        },
        {
            "Question": "What is the depth of node l? Answer an integer, root is of depth 0. ",
            "Answer": "0",
            "Reference": "l->m\nm->n\nm->o\nl->p\np->q\np->r"
        }
    ],
    "RuleHint": "To find the depth of a node, you need to find the number of edges from root to node. You have to start from the root with depth 0 and assign the depth for each node recursively. For any given node, it gets depth of current depth. Increment the depth by 1 before go to its subtree and repeat the process until every node gets a depth."
}