{
    "Question": "Extract all bold texts. Print those raw texts separated by \\n.",
    "Answer": "kangaroo",
    "Label": {
        "typename": "latex",
        "node_number": 1,
        "n_ary_ratio": 1,
        "para_len_ratio": 6,
        "few_shot_num": 9,
        "with_rule_hint": true,
        "other_label_list": [
            "TextRetrieval"
        ]
    },
    "Reference": "b\ngroot ze\\includegraphics[width=0.5\\textwidth]{hg.jpeg}n yogurt halo essence groot\n\\section{c}\nhalo zen yogurt halo essence groo\\textbf{kangaroo}t",
    "timestamp": "08_28_2024_23_21_27.024199",
    "input_hash": 4917323968699050764,
    "examples": [
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "wake",
            "Reference": "s\ngroot salvage oops essence apple jargon\n\\section{t}\nha\\textbf{wake}lo salv\\includegraphics[width=0.5\\textwidth]{re.jpeg}age oops essence apple jargon"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "halo",
            "Reference": "t\nfar groot unique ravish qualify oops\n\\section{u}\ngroot groot uniq\\textbf{halo}\\includegraphics[width=0.5\\textwidth]{ch.gif}oot unique ravish qualify oops"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "groot",
            "Reference": "t\ngroot salvage essence transformer idiot unique\n\\section{u}\nhalo salvage esse\\textbf{groot}nce transformer idiot unique"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "vigor",
            "Reference": "t\nqualify salvage perish apple\\includegraphics[width=0.5\\textwidth]{pf.png} apple perish\n\\section{u}\nravish salvage perish apple apple \\textbf{vigor}\\includegraphics[width=0.5\\textwidth]{qf.jpg}sh apple apple perish"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "perish",
            "Reference": "m\napple groot zen perish apple jargon\n\\section{n}\nbanana groot\\textbf{perish} zen perish apple jargon"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "ravish\nqualify",
            "Reference": "e\nravish groot apple yo\\textbf{qualify}\\includegraphics[width=0.5\\textwidth]{zh.gif}groot apple yogurt salvage halo\n\\section{f}\nsalv\\textbf{ravish}age groot apple\\includegraphics[width=0.5\\textwidth]{ai.png} yogurt salvage halo"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "kangaroo",
            "Reference": "z\nperish ravish groot transformer yogurt\\textbf{kangaroo} dentist\n\\section{ab}\nqualify ravish groot transformer yog\\includegraphics[width=0.5\\textwidth]{jg.jpg}urt dentist"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "No bold texts presented in file.",
            "Reference": "n\nhalo banana nob qua\\includegraphics[width=0.5\\textwidth]{se.jpg}lify qualify kangaroo\n\\section{o}\nidiot banana nob qualify qualify kangaroo"
        },
        {
            "Question": "Extract all bold texts. Print those raw texts separated by \\n. ",
            "Answer": "salvage\ntransformer",
            "Reference": "k\nbanana denti\\textbf{salvage}st cafe cafe X-ray idiot\n\\section{l}\ncafe dentist cafe\\textbf{transformer}\\includegraphics[width=0.5\\textwidth]{ff.gif}fe cafe X-ray idiot"
        }
    ],
    "RuleHint": "To find the bold texts, search for macro textbf, and everything after \\\\textbf{ and before the first } encountered is bold text."
}