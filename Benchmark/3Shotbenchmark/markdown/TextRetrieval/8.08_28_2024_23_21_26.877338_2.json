{
    "Question": "Extract all included image files. Print those file names separated by \\n.",
    "Answer": "vi.jpg\nwi.jpeg",
    "Label": {
        "typename": "markdown",
        "node_number": 2,
        "n_ary_ratio": 1,
        "para_len_ratio": 6,
        "few_shot_num": 3,
        "with_rule_hint": true,
        "other_label_list": [
            "TextRetrieval"
        ]
    },
    "Reference": "k\nmonkey idiot groot wake transforme![alt](vi.jpg \"hover text\")r wake oops wake transformer far dentist monkey\n# l\nnob idiot groot wake transformer wake o**dentist**![alt](wi.jpeg \"hover text\")ke oops wake transformer far dentist monkey\n## m\noops idiot groot wake transf**essence**ormer wake oops wake transformer far dentist monkey\n## n\nperish idiot groot wake transformer wake oops wake transformer far dentist monkey\n# o\nqualify idiot groot**far** wake transformer wake oops wake transformer far dentist monkey\n## p\nravish idiot groot wake transformer wake oops wake transformer far dentist monkey\n## q\nsalvage idiot groot wake transformer wake oops wake transformer far **groot**dentist monkey",
    "timestamp": "08_28_2024_23_21_26.877338",
    "input_hash": -4092794634614409348,
    "examples": [
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "de.gif\nee.jpeg",
            "Reference": "x\nyogurt nob vigor ravish transfo**far**rmer groot cafe qualify qualify essence qualify kangaroo\n# y\nzen![alt](de.gif \"hover text\") nob vigor ravish transformer groot cafe qualify qualify essence qualify kangaroo\n## z\napple oops vigo**groot**r ravish transformer groot cafe qualify qualify essence qualify kangaroo\n## ab\nbanana**halo** oops vigor ravish tr![alt](ee.jpeg \"hover text\")ansformer groot cafe qualify qualify essence qualify kangaroo\n# bb\ncafe oops vigor ravish transformer groot cafe qualify qualify essence qualify kangaroo\n## cb\ndentist oops **idiot**vigor ravish transformer groot cafe qualify qualify essence qualify kangaroo\n## db\nessence oops vigor ravish transformer groot cafe qualify qualify essence qualify kangaroo"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "og.jpeg\nmg.gif\npg.jpeg\nng.png\nqg.jpg",
            "Reference": "k\nqualify monkey X-ray **oops**cafe apple tran![alt](mg.gif \"hover text\")sformer jargon dentist yogurt lamb wake unique\n# l\nravish monkey X-ray cafe a![alt](ng.png \"hover text\")pple transformer jargon dentist yogurt lamb wake unique\n## m\nsalvage monkey X-ray cafe apple transformer jargon **perish**![alt](og.jpeg \"hover text\")y cafe apple transformer jargon dentist yogurt lamb wake unique\n## n\ntransformer monkey X-ray cafe appl![alt](pg.jpeg \"hover text\")e transformer jargon dentist yogurt lamb wake unique\n# o\nunique monkey X-ray cafe apple transformer jargon dentist yogurt**qualify** lamb wake unique\n## p\nvigor monkey X-ray cafe apple**ravish**![alt](qg.jpg \"hover text\")nkey X-ray cafe apple transformer jargon dentist yogurt lamb wake unique\n## q\nwake monkey X-ray cafe apple transformer jargon dentist yogurt lamb wake unique"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "jj.png\nkj.gif",
            "Reference": "z\ngroot jargon wake cafe ravish dentist nob halo perish uniqu**apple**e zen idiot\n# ab\nhalo jargon wake cafe ravish dentist nob halo perish unique zen idiot\n## bb\nidiot jargon wake cafe ravish dentist nob halo perish unique zen idiot\n## cb\nj![alt](jj.png \"hover text\")argon jargon wake cafe ravish dentist nob halo perish unique zen idiot\n# db\nkangaroo j**banana**argon wake cafe ravish dentis![alt](kj.gif \"hover text\")t nob halo perish unique zen idiot\n## eb\nlamb jargon wake cafe ravish dentist nob halo perish unique zen idiot\n## fb\nmonkey jargon wake cafe ravish dentist nob halo perish unique zen idiot"
        }
    ],
    "RuleHint": "To find the image files, look for texts matching ![*](TARGET \"*\"), the TARGET part is filename. Star means any text is possible."
}