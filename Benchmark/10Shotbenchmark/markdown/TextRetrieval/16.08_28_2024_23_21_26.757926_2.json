{
    "Question": "Extract all included image files. Print those file names separated by \\n.",
    "Answer": "dj.jpeg",
    "Label": {
        "typename": "markdown",
        "node_number": 1,
        "n_ary_ratio": 1,
        "para_len_ratio": 6,
        "few_shot_num": 10,
        "with_rule_hint": true,
        "other_label_list": [
            "TextRetrieval"
        ]
    },
    "Reference": "b\ntransformer idiot perish![alt](dj.jpeg \"hover text\") kangaroo lamb essence\n# c\nunique idiot perish kangaroo lamb essence",
    "timestamp": "08_28_2024_23_21_26.757926",
    "input_hash": 1369364788588148344,
    "examples": [
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "zi.jpeg",
            "Reference": "g\n**far**perish wake perish dentist unique oops\n# h\nqualify **groot**wake perish dentist unique oop![alt](zi.jpeg \"hover text\")s"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "ij.gif",
            "Reference": "j\nwake transformer vigor qualif**X-ray**y wake e![alt](ij.gif \"hover text\")ssence\n# k\nX-ray transformer vigor qualify wake essence"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "yg.gif\nxg.jpeg",
            "Reference": "x\nfar nob ha**vigor**![alt](xg.jpeg \"hover text\") halo jargon cafe zen\n# y\ngr![alt](yg.gif \"hover text\")oot nob halo jargon cafe zen"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "jg.jpeg",
            "Reference": "d\nzen monkey yogurt ba![alt](jg.jpeg \"hover text\")nana idiot essence\n# e\nappl**lamb**e nob yogurt banana idiot essence"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "re.png\nse.jpeg",
            "Reference": "l\nnob i**oops**diot jargon jargon cafe sa![alt](re.png \"hover text\")lvage\n# m\noops idiot jargon jargon ![alt](se.jpeg \"hover text\")cafe salvage"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "sf.png",
            "Reference": "p\nkangaroo ravish X-ray lamb zen vi**wake**![alt](sf.png \"hover text\")en vigor\n# q\nlamb ravish X-ray l**X-ray**amb zen vigor"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "sg.gif",
            "Reference": "a\nkangaroo vigor kangaroo unique peri![alt](sg.gif \"hover text\")sh halo\n# b\nlamb vigor kangaroo u**essence**nique perish halo"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "wg.png",
            "Reference": "i\nlamb banana banana qualify ravis**zen**![alt](wg.png \"hover text\")lamb banana banana qualify ravish qualify\n# j\nmonkey banana banana qualify ravish qualify"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "No image file is included in the file.",
            "Reference": "n\njargon far qualify X-ray groot oop**qualify**s\n# o\n**ravish**kangaroo far qualify X-ray groot oops"
        },
        {
            "Question": "Extract all included image files. Print those file names separated by \\n. ",
            "Answer": "gj.jpeg",
            "Reference": "m\ngr**banana**oot unique lamb yogurt qualify monkey\n# n\nhalo unique lamb yogurt **cafe**![alt](gj.jpeg \"hover text\")gurt qualify monkey"
        }
    ],
    "RuleHint": "To find the image files, look for texts matching ![*](TARGET \"*\"), the TARGET part is filename. Star means any text is possible."
}